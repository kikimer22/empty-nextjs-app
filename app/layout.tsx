import './globals.css';
import { ReactNode } from 'react';
import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import { auth } from '@/auth';
import Header from '@/components/Header';
import SessionProvider from '@/components/SessionProvider';
import Footer from '@/components/Footer';
import { cookies, headers } from 'next/headers';
import { ROUTES } from '@/constants/routes';
import { redirect } from 'next/navigation';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const protectedRoutes = [ROUTES.USER_INFO, ROUTES.POSTS];

export default async function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  const session = await auth();
  console.log('Session in RootLayout:', session);
  const cookieStore = await cookies();
  const theme = cookieStore.get('theme')?.value;

  const headersList = await headers();
  const fullUrl = headersList.get('x-url') || '';
  const url = new URL(fullUrl);
  const pathname = url.pathname;
  console.log('Current pathname:', pathname);
  const isProtected = protectedRoutes.some((route) => pathname.startsWith(route));
  console.log('isProtected', isProtected);

  if (isProtected && !session) {
    redirect(ROUTES.SIGN_IN);
  }

  return (
    <html lang="en" data-theme={theme}>
    <body
      className={`${geistSans.variable} ${geistMono.variable} antialiased`}
    >
    <SessionProvider session={session}>
      <div className="min-h-screen flex flex-col">
        <Header/>
        <main className="flex-1 flex flex-col bg-base-200">{children}</main>
        <Footer/>
      </div>
    </SessionProvider>
    </body>
    </html>
  );
}
